<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="friendsgram.a.pth.board01.dao.Board01Dao">

	<select id="board01List" parameterType="map" resultType="friendsgram.board01.dto.Board01Dto">
		<![CDATA[
		select * from board01 
		order by date desc limit #{start} , #{count}
 		]]>
	</select>

	<select id="count" resultType="int">
		select count(*) from board01
	</select>

	<select id="selectOne" parameterType="int" resultType="friendsgram.board01.dto.Board01Dto">
		select * from board01 where b_no01 = #{no}
	</select>

	<select id="board01ComentList" parameterType="int" resultType="friendsgram.board01.dto.Board01_ComentDto">
		select * from board01_coment where b_no01 = #{no} order by ref asc, c_no01 asc
	</select>
	
	<insert id="writeBoard01" parameterType="friendsgram.board01.dto.Board01Dto">
		insert into board01(title,code,content,date,readcount,id)
		values(#{title},#{code},#{content},now(),0,#{id})
	</insert>
	
	
	<insert id="reportboard01" parameterType="friendsgram.admin.dto.ReportDto">
		insert into report(report_content,r_no,num,id)
		values(#{report_content},#{r_no},#{num},#{id})
	</insert>
	
	
	<select id="countSearchBoard01" parameterType="map" resultType="int">
		select count(*) from board01 
		<where>
			<choose>
				<when test="skil == 'java'">
					and code = #{skil}
				</when>
				<when test="skil == 'python'">
					and code = #{skil}
				</when>
				<when test="skil == 'html'">
					and code = #{skil}
				</when>
				<when test="skil == 'database'">
					and code = #{skil}
				</when>
				<otherwise>
					and code = #{skil}
				</otherwise>
				
			</choose>
		
			<choose>
				<when test="category == 'title'">
					<if test="search != '' ">
						and title like CONCAT('%',#{search},'%')
					</if>
				</when>
				<when test="category == 'content' and search != '' ">
					<if test="search != '' ">
						and content likeCONCAT('%',#{search},'%')
					</if>
				</when>
				<when test="category == 'all'">
					<if test="search != '' ">
						and  ( title like CONCAT('%',#{search},'%') or content like CONCAT('%',#{search},'%') )
					</if>
				</when>
					
			</choose>
		
		
		</where>
	</select>
	
	
	<select id="SearchBoard01" parameterType="map" resultType="friendsgram.board01.dto.Board01Dto">
		select * from board01 
		<where>
			<choose>
				<when test="skil == 'java'">
					and code = #{skil}
				</when>
				<when test="skil == 'python'">
					and code = #{skil}
				</when>
				<when test="skil == 'html'">
					and code = #{skil}
				</when>
				<when test="skil == 'database'">
					and code = #{skil}
				</when>
				<otherwise>
					and code = #{skil}
				</otherwise>
				
			</choose>
		
			<choose>
				<when test="category == 'title'">
					<if test="search != '' ">
						and title like CONCAT('%',#{search},'%')
					</if>
				</when>
				<when test="category == 'content' and search != '' ">
					<if test="search != '' ">
						and content likeCONCAT('%',#{search},'%')
					</if>
				</when>
				<when test="category == 'all'">
					<if test="search != '' ">
						and  ( title like CONCAT('%',#{search},'%') or content like CONCAT('%',#{search},'%') )
					</if>
				</when>
					
			</choose>	
		</where>
		order by date desc limit #{start} , #{count}
		
	</select>
	
	
	
	<insert id="writeBoard01Coment" parameterType="friendsgram.board01.dto.Board01_ComentDto">
		insert into board01_coment(coment,date,id,b_no01,ref,ref_level)
		values(#{coment},now(),#{id}, #{b_no01}, #{ref}, #{ref_level}  )
	</insert>
	
	
	<select id="selectMaxComentNumber" resultType="int">
		select Max(c_no01) from board01_coment
	</select>
	
	
	<update id="updateComentRef" parameterType="map">
		update board01_coment
		set ref = #{c_no01}
		where id = #{id} and coment = #{coment} and c_no01 = #{c_no01}
	</update>
	
	
	<delete id="deleteComent" parameterType="int">
		delete from board01_coment
		where c_no01 = #{no}
	</delete>
	
	
	<select id="selectOneComent" parameterType="int" resultType="friendsgram.board01.dto.Board01_ComentDto">
		select * from board01_coment where c_no01 = #{no}
	</select>
	
	
	<select id="findComentRef" parameterType="int" resultType="int">
		select count(*) from board01_coment 
		where ref = #{ref}
	</select>
	
	
	
	<update id="updateDeleteComent" parameterType="int">
		update board01_coment
		set coment = '삭제된 댓글입니다.'
		where c_no01 = #{no}
	</update>
	
	<select id="trueFalseComentLike" parameterType="map" resultType="int">
		select count(*) from board01_coment_like
		where id = #{id} and c_no01 = #{c_no01}
	</select>
	
	<insert id="comentLikeConfirm" parameterType="map">
		insert into board01_coment_like(id, c_no01)
		values(#{id}, #{c_no01} )
	</insert>
	
	<select id="findComentLikeNumber" parameterType="int" resultType="int">
		select count(*) from board01_coment_like
		where c_no01 = #{c_no01}
	</select>
	
	<update id="addComentLikeNumber" parameterType="int">
		update board01_coment
		set comentlike = comentlike + 1
		where c_no01 = #{c_no01}
	</update>
	
	<select id="checkOnedayRead" parameterType="map" resultType="int">
		select count(*) from board01_readcount
		where id = #{id} and b_no01 = #{no} and clickdate = #{clickdate}
	</select>
	
	<update id="addReadCount" parameterType="int">
		update board01
		set readcount = readcount + 1
		where b_no01 = #{no}
	</update>
	
	<insert id="insertReadCountTable" parameterType="map">
		insert into board01_readcount(id, b_no01, clickdate)
		values(#{id}, #{no}, #{clickdate} )
	</insert>
	
	
	
	
	
	
</mapper>